{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ricardo\\\\Documents\\\\Projects\\\\pokedex\\\\apps\\\\pokedex\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPokemons, selectAllPokemons } from './redux/features/pokemon/pokemon-slice';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const pokemons = useSelector(selectAllPokemons);\n  console.log('list ', pokemons);\n  const postStatus = useSelector(state => state.pokemons.status);\n  const error = useSelector(state => state.pokemons.error);\n  useEffect(() => {\n    if (postStatus === 'idle') {\n      dispatch(fetchPokemons());\n    }\n  }, [postStatus, dispatch]);\n\n  const renderPokemonsList = () => {\n    console.log(pokemons);\n    return pokemons.map((pokemon, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: pokemon.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [postStatus === 'loading' ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 35\n    }, this) : null, postStatus === 'succeeded' ? renderPokemonsList() : null, postStatus === 'failed' ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 34\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PyiFGSGegw+1pKDtroNnrF/kp94=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Ricardo/Documents/Projects/pokedex/apps/pokedex/src/App.tsx"],"names":["useDispatch","useSelector","fetchPokemons","selectAllPokemons","useEffect","App","dispatch","pokemons","console","log","postStatus","state","status","error","renderPokemonsList","map","pokemon","index","name"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGA,SACEC,aADF,EAEEC,iBAFF,QAGO,wCAHP;AAKA,SAASC,SAAT,QAA0B,OAA1B;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,QAAQ,GAAGN,WAAW,CAACE,iBAAD,CAA5B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,QAArB;AACA,QAAMG,UAAU,GAAGT,WAAW,CAAEU,KAAD,IAAsBA,KAAK,CAACJ,QAAN,CAAeK,MAAtC,CAA9B;AACA,QAAMC,KAAK,GAAGZ,WAAW,CAAEU,KAAD,IAAsBA,KAAK,CAACJ,QAAN,CAAeM,KAAtC,CAAzB;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,UAAU,KAAK,MAAnB,EAA2B;AACzBJ,MAAAA,QAAQ,CAACJ,aAAa,EAAd,CAAR;AACD;AACF,GAJQ,EAIN,CAACQ,UAAD,EAAaJ,QAAb,CAJM,CAAT;;AAKA,QAAMQ,kBAAkB,GAAG,MAAM;AAC/BN,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAOA,QAAQ,CAACQ,GAAT,CAAa,CAACC,OAAD,EAAyBC,KAAzB,KAA2C;AAC7D,0BAAO;AAAA,kBAAkBD,OAAO,CAACE;AAA1B,SAAUD,KAAV;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,CAAP;AAGD,GALD;;AAMA,sBACE;AAAA,eACGP,UAAU,KAAK,SAAf,gBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA3B,GAAkD,IADrD,EAEGA,UAAU,KAAK,WAAf,GAA6BI,kBAAkB,EAA/C,GAAoD,IAFvD,EAGGJ,UAAU,KAAK,QAAf,gBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA1B,GAA+C,IAHlD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAxBQL,G;UACUL,W,EACAC,W,EAEEA,W,EACLA,W;;;KALPI,G;AAyBT,eAAeA,GAAf","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { decrement, increment } from './redux/features/counter/counter-slice';\nimport { RootState } from './redux/store';\nimport {\n  fetchPokemons,\n  selectAllPokemons,\n} from './redux/features/pokemon/pokemon-slice';\nimport { BasicPokemonI } from './interfaces/pokemonI';\nimport { useEffect } from 'react';\nfunction App() {\n  const dispatch = useDispatch();\n  const pokemons = useSelector(selectAllPokemons);\n  console.log('list ', pokemons);\n  const postStatus = useSelector((state: RootState) => state.pokemons.status);\n  const error = useSelector((state: RootState) => state.pokemons.error);\n  useEffect(() => {\n    if (postStatus === 'idle') {\n      dispatch(fetchPokemons());\n    }\n  }, [postStatus, dispatch]);\n  const renderPokemonsList = () => {\n    console.log(pokemons);\n    return pokemons.map((pokemon: BasicPokemonI, index: number) => {\n      return <div key={index}>{pokemon.name}</div>;\n    });\n  };\n  return (\n    <div>\n      {postStatus === 'loading' ? <span>Loading</span> : null}\n      {postStatus === 'succeeded' ? renderPokemonsList() : null}\n      {postStatus === 'failed' ? <span>Error</span> : null}\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}