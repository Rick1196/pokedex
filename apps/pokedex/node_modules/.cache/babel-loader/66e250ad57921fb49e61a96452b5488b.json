{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getPokemons } from '../../../services/pokemons';\nconst initialState = {\n  pokemons: null,\n  status: 'idle',\n  error: null\n};\nexport const fetchPokemons = createAsyncThunk('pokemons/fetchPokemons', async () => {\n  const response = await getPokemons(20, 200);\n  return response;\n});\nconst pokemonsSlice = createSlice({\n  name: 'pokemons',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchPokemons.fulfilled, (state, {\n      payload\n    }) => {\n      state.pokemons = payload;\n      state.status = 'succeeded';\n    });\n    builder.addCase(fetchPokemons.pending, (state, {\n      payload\n    }) => {\n      state.status = 'loading';\n    });\n    builder.addCase(fetchPokemons.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default pokemonsSlice.reducer;\nexport const selectAllPokemons = state => state.pokemons ? state.pokemons.results : [];","map":{"version":3,"sources":["C:/Users/Ricardo/Documents/Projects/pokedex/apps/pokedex/src/redux/features/pokemon/pokemon-slice.ts"],"names":["createAsyncThunk","createSlice","getPokemons","initialState","pokemons","status","error","fetchPokemons","response","pokemonsSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","payload","pending","rejected","action","message","reducer","selectAllPokemons","results"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,SAASC,WAAT,QAA4B,4BAA5B;AASA,MAAMC,YAA4B,GAAG;AACnCC,EAAAA,QAAQ,EAAE,IADyB;AAEnCC,EAAAA,MAAM,EAAE,MAF2B;AAGnCC,EAAAA,KAAK,EAAE;AAH4B,CAArC;AAMA,OAAO,MAAMC,aAAa,GAAGP,gBAAgB,CAC3C,wBAD2C,EAE3C,YAAY;AACV,QAAMQ,QAAQ,GAAG,MAAMN,WAAW,CAAC,EAAD,EAAK,GAAL,CAAlC;AACA,SAAOM,QAAP;AACD,CAL0C,CAAtC;AAQP,MAAMC,aAAa,GAAGR,WAAW,CAAC;AAChCS,EAAAA,IAAI,EAAE,UAD0B;AAEhCP,EAAAA,YAFgC;AAGhCQ,EAAAA,QAAQ,EAAE,EAHsB;AAIhCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBP,aAAa,CAACQ,SAA9B,EAAyC,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAC/DD,MAAAA,KAAK,CAACZ,QAAN,GAAiBa,OAAjB;AACAD,MAAAA,KAAK,CAACX,MAAN,GAAe,WAAf;AACD,KAHD;AAIAQ,IAAAA,OAAO,CAACC,OAAR,CAAgBP,aAAa,CAACW,OAA9B,EAAuC,CAACF,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAC7DD,MAAAA,KAAK,CAACX,MAAN,GAAe,SAAf;AACD,KAFD;AAGAQ,IAAAA,OAAO,CAACC,OAAR,CAAgBP,aAAa,CAACY,QAA9B,EAAwC,CAACH,KAAD,EAAQI,MAAR,KAAmB;AACzDJ,MAAAA,KAAK,CAACX,MAAN,GAAe,QAAf;AACAW,MAAAA,KAAK,CAACV,KAAN,GAAcc,MAAM,CAACd,KAAP,CAAae,OAA3B;AACD,KAHD;AAID;AAhB+B,CAAD,CAAjC;AAoBA,eAAeZ,aAAa,CAACa,OAA7B;AAEA,OAAO,MAAMC,iBAAiB,GAAIP,KAAD,IAC/BA,KAAK,CAACZ,QAAN,GAAiBY,KAAK,CAACZ,QAAN,CAAeoB,OAAhC,GAA0C,EADrC","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { PokemonListI } from '../../../interfaces/pokemonI';\r\nimport { getPokemons } from '../../../services/pokemons';\r\n\r\nexport interface PokemonsStateI {\r\n  pokemons: PokemonListI | null;\r\n  status: 'idle' | 'loading' | 'succeeded' | 'failed';\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  error: any;\r\n}\r\n\r\nconst initialState: PokemonsStateI = {\r\n  pokemons: null,\r\n  status: 'idle',\r\n  error: null,\r\n};\r\n\r\nexport const fetchPokemons = createAsyncThunk(\r\n  'pokemons/fetchPokemons',\r\n  async () => {\r\n    const response = await getPokemons(20, 200);\r\n    return response;\r\n  }\r\n);\r\n\r\nconst pokemonsSlice = createSlice({\r\n  name: 'pokemons',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPokemons.fulfilled, (state, { payload }) => {\r\n      state.pokemons = payload;\r\n      state.status = 'succeeded';\r\n    });\r\n    builder.addCase(fetchPokemons.pending, (state, { payload }) => {\r\n      state.status = 'loading';\r\n    });\r\n    builder.addCase(fetchPokemons.rejected, (state, action) => {\r\n      state.status = 'failed';\r\n      state.error = action.error.message;\r\n    });\r\n  },\r\n});\r\n\r\n\r\nexport default pokemonsSlice.reducer;\r\n\r\nexport const selectAllPokemons = (state: PokemonsStateI) =>\r\n  state.pokemons ? state.pokemons.results : [];\r\n"]},"metadata":{},"sourceType":"module"}